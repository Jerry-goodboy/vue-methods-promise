{"version":3,"file":"vue-methods-promise.js","sources":["../src/isObject.js","../src/isPromise.js","../src/hijack.js","../src/methodsPromise.js","../src/index.js"],"sourcesContent":["export default function (obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]'\n}\n","export default function isPromise (obj) {\n  return Object.prototype.toString.call(obj) === '[object Promise]' || (!!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.constructor === 'function' && !Object.hasOwnProperty.call(obj, 'constructor') && obj.constructor.name === 'Promise')\n}\n","import isPromise from './isPromise'\n\nexport default function hijack (opt, native) {\n  function vueMethodsPromise () {\n    let back = native.apply(this, arguments)\n    if (isPromise(back)) {\n      if (typeof this[opt.hookName] === 'function') {\n        let hookBack = this[opt.hookName](back)\n        if (isPromise(hookBack)) {\n          opt.promise.call(this, back)\n        }\n      } else {\n        opt.promise.call(this, back)\n      }\n    }\n    return back\n  }\n  vueMethodsPromise._vueMethodsPromise = true // 加个标记，避免重复劫持，导致栈溢出\n  return vueMethodsPromise\n}\n","import isObject from './isObject'\nimport hijack from './hijack'\n\nexport default (opt = {}) => {\n  // Configure the hook function\n  if (typeof opt.hookName !== 'string') {\n    opt.hookName = '$promise'\n  }\n  // Global hook function\n  if (typeof opt.promise !== 'function') {\n    opt.promise = (mp) => {\n      mp.catch((err) => {\n        console.log(err)\n      })\n    }\n  }\n\n  return {\n    beforeCreate () {\n      const { methods } = this.$options\n      if (!isObject(methods)) return\n      Object.keys(methods).forEach((k) => {\n        let fn = methods[k]\n        if (fn._vueMethodsPromise !== true && typeof fn === 'function' && k !== opt.hookName) {\n          methods[k] = hijack(opt, fn)\n        }\n      })\n    }\n  }\n}\n","import methodsPromise from './methodsPromise'\n\nexport default function install (Vue, opt) {\n  if (install.installed) return // already installed\n\n  Vue.mixin(methodsPromise(opt))\n}\n"],"names":["obj","Object","prototype","toString","call","isPromise","constructor","hasOwnProperty","name","hijack","opt","native","vueMethodsPromise","back","apply","arguments","hookName","hookBack","promise","_vueMethodsPromise","mp","catch","err","log","methods","$options","isObject","keys","forEach","k","fn","install","Vue","installed","mixin","methodsPromise"],"mappings":";;;;;;AAAA,eAAe,UAAUA,GAAV,EAAe;SACrBC,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,GAA/B,MAAwC,iBAA/C;;;;;;;;;ACDa,SAASK,SAAT,CAAoBL,GAApB,EAAyB;SAC/BC,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,GAA/B,MAAwC,kBAAxC,IAA+D,CAAC,CAACA,GAAF,KAAU,QAAOA,GAAP,yCAAOA,GAAP,OAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,UAApD,KAAmE,OAAOA,IAAIM,WAAX,KAA2B,UAA9F,IAA4G,CAACL,OAAOM,cAAP,CAAsBH,IAAtB,CAA2BJ,GAA3B,EAAgC,aAAhC,CAA7G,IAA+JA,IAAIM,WAAJ,CAAgBE,IAAhB,KAAyB,SAA9P;;;ACCa,SAASC,MAAT,CAAiBC,GAAjB,EAAsBC,MAAtB,EAA8B;WAClCC,iBAAT,GAA8B;QACxBC,OAAOF,OAAOG,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAX;QACIV,UAAUQ,IAAV,CAAJ,EAAqB;UACf,OAAO,KAAKH,IAAIM,QAAT,CAAP,KAA8B,UAAlC,EAA8C;YACxCC,WAAW,KAAKP,IAAIM,QAAT,EAAmBH,IAAnB,CAAf;YACIR,UAAUY,QAAV,CAAJ,EAAyB;cACnBC,OAAJ,CAAYd,IAAZ,CAAiB,IAAjB,EAAuBS,IAAvB;;OAHJ,MAKO;YACDK,OAAJ,CAAYd,IAAZ,CAAiB,IAAjB,EAAuBS,IAAvB;;;WAGGA,IAAP;;oBAEgBM,kBAAlB,GAAuC,IAAvC,CAf2C;SAgBpCP,iBAAP;;;ACfF,sBAAe,YAAc;MAAbF,GAAa,uEAAP,EAAO;;;MAEvB,OAAOA,IAAIM,QAAX,KAAwB,QAA5B,EAAsC;QAChCA,QAAJ,GAAe,UAAf;;;MAGE,OAAON,IAAIQ,OAAX,KAAuB,UAA3B,EAAuC;QACjCA,OAAJ,GAAc,UAACE,EAAD,EAAQ;SACjBC,KAAH,CAAS,UAACC,GAAD,EAAS;gBACRC,GAAR,CAAYD,GAAZ;OADF;KADF;;;SAOK;gBAAA,0BACW;UACNE,OADM,GACM,KAAKC,QADX,CACND,OADM;;UAEV,CAACE,SAASF,OAAT,CAAL,EAAwB;aACjBG,IAAP,CAAYH,OAAZ,EAAqBI,OAArB,CAA6B,UAACC,CAAD,EAAO;YAC9BC,KAAKN,QAAQK,CAAR,CAAT;YACIC,GAAGX,kBAAH,KAA0B,IAA1B,IAAkC,OAAOW,EAAP,KAAc,UAAhD,IAA8DD,MAAMnB,IAAIM,QAA5E,EAAsF;kBAC5Ea,CAAR,IAAapB,OAAOC,GAAP,EAAYoB,EAAZ,CAAb;;OAHJ;;GAJJ;CAdF;;ACDe,SAASC,OAAT,CAAkBC,GAAlB,EAAuBtB,GAAvB,EAA4B;MACrCqB,QAAQE,SAAZ,EAAuB,OADkB;;MAGrCC,KAAJ,CAAUC,eAAezB,GAAf,CAAV;;;;;"}